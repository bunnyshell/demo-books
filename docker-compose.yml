version: '3.4'
services:
  backend:
    container_name: bunnyshell-books-backend
    build:
      context: ./backend
      target: ${BACKEND_BUILD_TARGET:-dev} # use "prod" for production
    volumes:
       - ./backend:/usr/src/app/backend
    environment:
      - POSTGRES_HOST=db # name of the "db" service
      - POSTGRES_DB=bunny_books
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=need-to-replace
      - FRONTEND_URL=${FRONTEND_URL-http://books.local.bunnyshell.com:8080}
    ports:
      - "3080:3080"
    depends_on:
      - db
  db:
    container_name: bunnyshell-books-db
    image: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=bunny_books
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=need-to-replace
    expose:
      - 5432
  frontend:
    container_name: bunnyshell-books-angular
    build:
      context: ./frontend-angular
      target: ${FRONTEND_BUILD_TARGET:-dev} # use "prod" for production
      args:
        API_URL: ${BACKEND_URL-http://books-api.local.bunnyshell.com:3080}
    volumes:
      - ./frontend-angular:/usr/src/app:delegated
    ports:
      - "80:80"
      - "4200:4200"

volumes:
  db-data: